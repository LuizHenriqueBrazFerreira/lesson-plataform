version: '3.9'
services:
  frontend:
    container_name: app_frontend
    build: ./frontend
    ports:
      - 3000:3000
    working_dir: /frontend
    # Os `healthcheck` devem garantir que a aplicação
    # está operacional, antes de liberar o container
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5
  backend:
    container_name: app_backend
    build: ./backend
    ports:
      - 3001:3001
    # Caso queira que o container esteja atualizado durante o desenvolvimento, sem que você precise ficar fazendo down e up dos containers, descomente as 3 linhas abaixo
    command: dev 
    volumes: 
      - ./backend:/backend/
    depends_on:
      db:
        condition: service_healthy

    env_file:
      - .env
    environment:
      - PORT=${PORT}
      - JWT_SECRET=${JWT_SECRET}
      - SALT_ROUNDS=${SALT_ROUNDS}
      - NODE_ENV=${NODE_ENV}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_USER=${MYSQL_ROOT_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - FRONTEND_URL=${FRONTEND_URL}
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5
  db:
    image: mysql:8.0.23
    container_name: db
    platform: linux/x86_64
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=fsmsss_password
    restart: 'always'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"] # Deve aguardar o banco ficar operacional
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores
